{"version":3,"sources":["webpack:///./src/pages/profile.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/Login.js","webpack:///./src/components/nav-bar.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","auth","Auth","ProfilePage","a","createElement","title","keywords","getUserName","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Login","isAuthenticated","es","onClick","logout","login","nav_bar","content","message","display","flex","justifyContent","borderBottom","href","components_Login","Layout","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","_755544856","node","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","length","join","arrayOf"],"mappings":"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","file":"component---src-pages-profile-js-a7e2c8ce03392f8dea17.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Auth from '../utils/auth'\r\n\r\n\r\n\r\nconst auth = new Auth()\r\nconst ProfilePage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n\t<div>Welcome {auth.getUserName()}</div>\r\n\t\r\n    <Link to=\"/\">Go to home page</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default ProfilePage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Button } from 'reakit'\r\nimport Auth from '../utils/auth'\r\n \r\nconst auth = new Auth()\r\n \r\nconst Login = () => {\r\n\t\r\n  const { isAuthenticated } = auth\r\n\r\n  if (isAuthenticated()) {\r\n    return <Button onClick={auth.logout}>Logout {auth.getUserName()}</Button>\r\n\t \r\n  } else {\r\n    return <Button onClick={auth.login}>Login</Button>\r\n  }\r\n}\r\n \r\nexport default Login","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Auth from '../utils/auth'\r\nimport Login from '../components/Login'\r\n\r\nexport default () => {\r\n\tconst auth = new Auth()\r\n\t\r\n  const content = { message: \"\", login: true }\r\n  \t const { isAuthenticated } = auth\r\n\tif (isAuthenticated()) {\r\n\t\tcontent.message = `Hello, `\r\n\t}else{\r\n\t\t content.message = \"You are not logged in\"\r\n\t}\r\n  \r\n \r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: \"1\",\r\n        justifyContent: \"space-between\",\r\n        borderBottom: \"1px solid #d1c1e0\",\r\n      }}\r\n    >\r\n      <span>{content.message}</span> \r\n      <nav>\r\n        <Link to=\"/\">Home</Link>\r\n       \r\n        <Link to=\"/app/profile\">Profile</Link> \r\n       \r\n        {isAuthenticated() ? (\r\n          <a\r\n            href=\"/\"\r\n           onClick={auth.logout}\r\n          >\r\n            Logout\r\n          </a>\r\n        ) : <Login auth={auth} />}\r\n      </nav>\r\n    </div>\r\n  )\r\n}","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\nimport NavBar from \"./nav-bar\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        > <NavBar />\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}, \r\n            {` `}\r\n            Paradise Tech Soft pvt. ltd.\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}